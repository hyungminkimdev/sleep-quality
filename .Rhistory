na_counts <- colSums(is.na(data_1))
na_counts[na_counts > 0]
# Fit BN1
bn_1_df <- data.frame(data_1)
bn_1_df <- bn_1_df %>% select(-User.ID)
bn_1 <- hc(bn_1_df)
plot(bn_1)
graphviz.plot(bn_1, layout = "dot")
# Age
data_1 <- data_1 %>% mutate(Age.group = cut(Age,
breaks = seq(0, 100, by = 10),
right = FALSE,
labels = paste(seq(0, 90, by = 10), seq(9, 99, by = 10), sep = "-")))
data_1 <- data_1 %>% select(-Age)
data_1$Age.group <- as.factor(data_1$Age.group)
# Fit BN1
bn_2_df <- data.frame(data_1)
bn_2_df <- bn_2_df %>% select(-User.ID)
bn_2 <- hc(bn_2_df)
plot(bn_2)
graphviz.plot(bn_2, layout = "dot")
# Sleep duration
data_1 <- data_1 %>% mutate(Bedtime = as.POSIXct(Bedtime, format = "%H:%M"),
Wake.up.Time = as.POSIXct(Wake.up.Time, format = "%H:%M"),
Sleep.duration = ifelse(Wake.up.Time < Bedtime,
as.numeric(difftime(Wake.up.Time + 86400, Bedtime, units = "hours")),
as.numeric(difftime(Wake.up.Time, Bedtime, units = "hours"))))
data_1 <- data_1 %>% mutate(Sleep.duration.group = cut(Sleep.duration,
breaks = seq(3, 10, by = 0.5),
right = FALSE,
labels = paste(seq(3, 8.5, by = 0.5), seq(3.5, 10, by = 0.5), sep = "-")))
data_1 <- data_1 %>% select(-Sleep.duration)
data_1$Wake.up.Time <- ymd_hms(data_1$Wake.up.Time)
data_1$Wake.up.Time <- format(data_1$Wake.up.Time, "%H:%M")
data_1$Bedtime <- ymd_hms(data_1$Bedtime)
data_1$Bedtime <- format(data_1$Bedtime, "%H:%M")
data_1$Sleep.duration.group <- as.factor(data_1$Sleep.duration.group)
data_1
summar(data_1)
summary(data_1)
summary(data_1$Sleep.duration.group)
# Fit BN3
bn_3_df <- data.frame(data_1)
bn_3_df <- bn_3_df %>% select(-User.ID)
bn_3 <- hc(bn_3_df)
data_1$Bedtime <- as.factor(data_1$Bedtime)
data_1$Wake.up.Time <- as.factor(data_1$Wake.up.Time)
# Fit BN3
bn_3_df <- data.frame(data_1)
bn_3_df <- bn_3_df %>% select(-User.ID)
bn_3 <- hc(bn_3_df)
plot(bn_3)
graphviz.plot(bn_3, layout = "dot")
original_data <- read.csv(file='Health_Sleep_Statistics.csv', header=TRUE, sep=",", na.strings=".")
data_1 <- original_data
summary(data_1)
# View(data_1)
head(data_1)
# Preprocessing
# Age
data_1$Age <- as.numeric(data_1$Age)
# Gender
data_1$Gender <- as.factor(data_1$Gender)
# Sleep.Quality
data_1$Sleep.Quality <- as.factor(data_1$Sleep.Quality)
# Bedtime
data_1$Bedtime <- as.factor(data_1$Bedtime)
# Wake.up.Time
data_1$Wake.up.Time <- as.factor(data_1$Wake.up.Time)
# Daily Steps
data_1$Daily.Steps <- as.numeric(data_1$Daily.Steps)
# Calories.Burned
data_1$Calories.Burned <- as.numeric(data_1$Calories.Burned)
# Physical.Activity.Level
data_1$Physical.Activity.Level <- as.factor((data_1$Physical.Activity.Level))
# Dietary.Habits
data_1$Dietary.Habits <- as.factor(data_1$Dietary.Habits)
# Sleep.Disorders
data_1$Sleep.Disorders <- as.factor(data_1$Sleep.Disorders)
# Medication.Usage
data_1$Medication.Usage <- as.factor((data_1$Medication.Usage))
# Missing Values
na_counts <- colSums(is.na(data_1))
na_counts[na_counts > 0]
# Fit BN1
bn_1_df <- data.frame(data_1)
bn_1_df <- bn_1_df %>% select(-User.ID)
bn_1 <- hc(bn_1_df)
plot(bn_1)
graphviz.plot(bn_1, layout = "dot")
# Discretize continuous variables
# Age
data_2 <- data_1
data_2 <- data_2 %>% mutate(Age.group = cut(Age,
breaks = seq(0, 100, by = 10),
right = FALSE,
labels = paste(seq(0, 90, by = 10), seq(9, 99, by = 10), sep = "-")))
data_2 <- data_2 %>% select(-Age)
data_2$Age.group <- as.factor(data_2$Age.group)
# Fit BN2
bn_2_df <- data.frame(data_2)
bn_2_df <- bn_2_df %>% select(-User.ID)
bn_2 <- hc(bn_2_df)
plot(bn_2)
graphviz.plot(bn_2, layout = "dot")
# Sleep duration
data_3 <- data_2
data_3 <- data_3 %>% mutate(Bedtime = as.POSIXct(Bedtime, format = "%H:%M"),
Wake.up.Time = as.POSIXct(Wake.up.Time, format = "%H:%M"),
Sleep.duration = ifelse(Wake.up.Time < Bedtime,
as.numeric(difftime(Wake.up.Time + 86400, Bedtime, units = "hours")),
as.numeric(difftime(Wake.up.Time, Bedtime, units = "hours"))))
data_3 <- data_3 %>% mutate(Sleep.duration.group = cut(Sleep.duration,
breaks = seq(3, 10, by = 0.5),
right = FALSE,
labels = paste(seq(3, 8.5, by = 0.5), seq(3.5, 10, by = 0.5), sep = "-")))
data_3 <- data_3 %>% select(-Sleep.duration)
data_3$Wake.up.Time <- ymd_hms(data_3$Wake.up.Time)
data_3$Wake.up.Time <- format(data_3$Wake.up.Time, "%H:%M")
data_3$Bedtime <- ymd_hms(data_3$Bedtime)
data_3$Bedtime <- format(data_3$Bedtime, "%H:%M")
data_3$Bedtime <- as.factor(data_3$Bedtime)
data_3$Wake.up.Time <- as.factor(data_3$Wake.up.Time)
data_3$Sleep.duration.group <- as.factor(data_3$Sleep.duration.group)
# Fit BN3
bn_3_df <- data.frame(data_3)
bn_3_df <- bn_3_df %>% select(-User.ID)
bn_3 <- hc(bn_3_df)
plot(bn_3)
graphviz.plot(bn_3, layout = "dot")
# Daily.Steps and Calories.Burned
data_4 <- data_3
continuous_vars <- c("Daily.Steps", "Calories.Burned")
data_4_cols_discretized <- discretize(data_4, method = "hartemink", breaks = 3, ordered = TRUE, data = data_4[, continuous_vars])
table(data_4_cols_discretized$Daily.Steps)
table(data_4_cols_discretized$Calories.Burned)
temp <- data_4
temp[, continuous_vars] <- data_4_cols_discretized
data_4_discretized <- temp
head(data_4_discretized)
# Fit BN2
bn_4_df <- data.frame(data_4_discretized)
bn_4_df <- bn_4_df %>% select(-ID)
bn_4_df <- bn_4_df %>% select(-User.ID)
bn_4 <- hc(bn_4_df)
plot(bn_4)
graphviz.plot(bn_4, layout = "dot")
# Evaluate Model
bic_score_bn_4 <- score(bn_4, data = bn_4_df, type = "bic")
print(paste("BIC Score:", bic_score_bn_4))
# Todolist
# Add Melatonin
melatonin_data <- read.csv(file='SocialMediaUsage_SleepLatencyAnalysis_Singapore.csv', header=TRUE, sep=",", na.strings=".")
summary(melatonin_data)
summary(data_4_discretized)
summary(data_4_discretized$Sleep.duration.group)
summary(melatonin_data$Sleep.Quality.Rating)
summary(data_4_discretized$Sleep.Quality)
# Sleep.Quality
data_5 <- data_4_discretized
summary(data_5$Sleep.Quality)
# Sleep.Quality
data_5 <- data_4_discretized
data_5 <- data_5 %>% mutate(Sleep.Quality.Rating = cut(Sleep.Quality,
breaks = c(0, 2, 4, 6, 8, 10),
labels = c(1, 2, 3, 4, 5),
right = TRUE))
original_data <- read.csv(file='Health_Sleep_Statistics.csv', header=TRUE, sep=",", na.strings=".")
data_1 <- original_data
summary(data_1)
# View(data_1)
head(data_1)
# Preprocessing
# Age
data_1$Age <- as.numeric(data_1$Age)
# Gender
data_1$Gender <- as.factor(data_1$Gender)
# Sleep.Quality
data_1$Sleep.Quality <- as.numeric(data_1$Sleep.Quality)
# Bedtime
data_1$Bedtime <- as.factor(data_1$Bedtime)
# Wake.up.Time
data_1$Wake.up.Time <- as.factor(data_1$Wake.up.Time)
# Daily Steps
data_1$Daily.Steps <- as.numeric(data_1$Daily.Steps)
# Calories.Burned
data_1$Calories.Burned <- as.numeric(data_1$Calories.Burned)
# Physical.Activity.Level
data_1$Physical.Activity.Level <- as.factor((data_1$Physical.Activity.Level))
# Dietary.Habits
data_1$Dietary.Habits <- as.factor(data_1$Dietary.Habits)
# Sleep.Disorders
data_1$Sleep.Disorders <- as.factor(data_1$Sleep.Disorders)
# Medication.Usage
data_1$Medication.Usage <- as.factor((data_1$Medication.Usage))
# Missing Values
na_counts <- colSums(is.na(data_1))
na_counts[na_counts > 0]
# Fit BN1
bn_1_df <- data.frame(data_1)
bn_1_df <- bn_1_df %>% select(-User.ID)
bn_1 <- hc(bn_1_df)
plot(bn_1)
graphviz.plot(bn_1, layout = "dot")
# Discretize continuous variables
# Age
data_2 <- data_1
data_2 <- data_2 %>% mutate(Age.group = cut(Age,
breaks = seq(0, 100, by = 10),
right = FALSE,
labels = paste(seq(0, 90, by = 10), seq(9, 99, by = 10), sep = "-")))
data_2 <- data_2 %>% select(-Age)
data_2$Age.group <- as.factor(data_2$Age.group)
# Fit BN2
bn_2_df <- data.frame(data_2)
bn_2_df <- bn_2_df %>% select(-User.ID)
bn_2 <- hc(bn_2_df)
plot(bn_2)
graphviz.plot(bn_2, layout = "dot")
# Sleep duration
data_3 <- data_2
data_3 <- data_3 %>% mutate(Bedtime = as.POSIXct(Bedtime, format = "%H:%M"),
Wake.up.Time = as.POSIXct(Wake.up.Time, format = "%H:%M"),
Sleep.duration = ifelse(Wake.up.Time < Bedtime,
as.numeric(difftime(Wake.up.Time + 86400, Bedtime, units = "hours")),
as.numeric(difftime(Wake.up.Time, Bedtime, units = "hours"))))
data_3 <- data_3 %>% mutate(Sleep.duration.group = cut(Sleep.duration,
breaks = seq(3, 10, by = 0.5),
right = FALSE,
labels = paste(seq(3, 9.5, by = 0.5), seq(3.5, 10, by = 0.5), sep = "-")))
data_3 <- data_3 %>% select(-Sleep.duration)
data_3$Wake.up.Time <- ymd_hms(data_3$Wake.up.Time)
data_3$Wake.up.Time <- format(data_3$Wake.up.Time, "%H:%M")
data_3$Bedtime <- ymd_hms(data_3$Bedtime)
data_3$Bedtime <- format(data_3$Bedtime, "%H:%M")
data_3$Bedtime <- as.factor(data_3$Bedtime)
data_3$Wake.up.Time <- as.factor(data_3$Wake.up.Time)
data_3$Sleep.duration.group <- as.factor(data_3$Sleep.duration.group)
# Fit BN3
bn_3_df <- data.frame(data_3)
bn_3_df <- bn_3_df %>% select(-User.ID)
bn_3 <- hc(bn_3_df)
plot(bn_3)
graphviz.plot(bn_3, layout = "dot")
# Daily.Steps and Calories.Burned
data_4 <- data_3
continuous_vars <- c("Daily.Steps", "Calories.Burned")
data_4_cols_discretized <- discretize(data_4, method = "hartemink", breaks = 3, ordered = TRUE, data = data_4[, continuous_vars])
table(data_4_cols_discretized$Daily.Steps)
table(data_4_cols_discretized$Calories.Burned)
data_4[, continuous_vars] <- data_4_cols_discretized
head(data_4)
# Fit BN4
bn_4_df <- data.frame(data_4_discretized)
# Fit BN4
bn_4_df <- data.frame(data_4)
bn_4_df <- bn_4_df %>% select(-User.ID)
bn_4 <- hc(bn_4_df)
plot(bn_4)
graphviz.plot(bn_4, layout = "dot")
head(data_4)
# Sleep.Quality.Ranking
data_5 <- data_4
data_5 <- data_5 %>% mutate(Sleep.Quality.Rating = cut(Sleep.Quality,
breaks = c(0, 2, 4, 6, 8, 10),
labels = c(1, 2, 3, 4, 5),
right = TRUE))
head(data_5)
summary(data_5$Sleep.Quality.Rating)
data_5 <- data_5 %>% select(-Sleep.Quality)
summary(data_5)
# Fit BN5
bn_5_df <- data.frame(data_5)
bn_5_df <- bn_5_df %>% select(-User.ID)
bn_5 <- hc(bn_5_df)
plot(bn_5)
graphviz.plot(bn_5, layout = "dot")
# Evaluate BN5
bic_score_bn_5 <- score(bn_5, data = bn_5_df, type = "bic")
print(paste("BIC Score:", bic_score_bn_5))
# Todolist
# Add Melatonin
melatonin_data <- read.csv(file='SocialMediaUsage_SleepLatencyAnalysis_Singapore.csv', header=TRUE, sep=",", na.strings=".")
# Age.group
melatonin_data <- melatonin_data %>% mutate(Age.group = cut(Age,
breaks = seq(0, 100, by = 10),
right = FALSE,
labels = paste(seq(0, 90, by = 10), seq(9, 99, by = 10), sep = "-")))
summary(melatonin_data)
# Sleep.duration.group
melatonin_data <- melatonin_data %>% mutate(Sleep.duration.group = cut(Total.Sleep.Time..hours.,
breaks = seq(3, 10, by = 0.5),
right = FALSE,
labels = paste(seq(3, 9.5, by = 0.5), seq(3.5, 10, by = 0.5), sep = "-")))
summary(melatonin_data)
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level..pg.mL.")]
data_5_subset <- data_5[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating")]
melatonin_continuous_vars <- c("Melatonin.Level..pg.mL.")
melatonin_subset_cols_discretized <- discretize(melatonin_subset, method = "hartemink", breaks = 3, ordered = TRUE, data = melatonin_subset[, melatonin_continuous_vars])
# Fit Model
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level..pg.mL.")]
data_5_subset <- data_5[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating")]
melatonin_continuous_vars <- c("Melatonin.Level..pg.mL.")
melatonin_subset_cols_discretized <- discretize(melatonin_subset, method = "hartemink", breaks = 3, ordered = TRUE, data = melatonin_subset[, melatonin_continuous_vars])
# Fit Model
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level..pg.mL.")]
data_5_subset <- data_5[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating")]
melatonin_subset_discretized <- discretize(melatonin_subset[, c("Melatonin.Level..pg.mL.")], method = "hartemink", breaks = 3)
melatonin_subset_discretized <- discretize(as.data.frame(melatonin_subset[, c("Melatonin.Level..pg.mL.")]), method = "hartemink", breaks = 3)
summary(melatonin_subset)
summary(melatonin_subset$Melatonin.Level..pg.mL.)
melatonin_data <- melatonin_data %>% mutate(Melatonin.Level.group..pg.mL. = cut(Melatonin.Level..pg.mL.,
method = "hartemink",
breaks = 3))
summary(melatonin_data)
# Fit Model
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level.group..pg.mL.")]
data_5_subset <- data_5[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating")]
table(melatonin_data$Melatonin.Level.group..pg.mL.)
melatonin_subset$Age.group <- as.factor(melatonin_subset$Age.group)
melatonin_subset$Sleep.duration.group <- as.factor(melatonin_subset$Sleep.duration.group)
melatonin_subset$Sleep.Quality.Rating <- as.factor(melatonin_subset$Sleep.Quality.Rating)
melatonin_subset$Melatonin.Level.group..pg.mL. <- as.factor(melatonin_subset$Melatonin.Level.group..pg.mL.)
bn_melatonin <- hc(bn_melatonin_subset)
bn_melatonin_model <- bn.fit(bn_melatonin, data = melatonin_subset)
summary(bn_melatonin)
bn_melatonin
bn_melatonin <- hc(bn_melatonin_subset)
bn_melatonin
summary(bn_melatonin)
bn_melatonin <- hc(melatonin_subset)
bn_melatonin
bn_melatonin_model <- bn.fit(bn_melatonin, data = melatonin_subset)
# Infer Melatonin Level using fitted model
data_6 <- data_5
summary(data_6)
data_6$Melatonin.Level.group..pg.mL. <- predict(bn_melatonin_model, newdata = data_5_subset)
levels(data_6)
summary(data_6)
bn_melatonin_model
summary(bn_melatonin_model)
# Infer Melatonin Level using fitted model
data_6 <- data_5
summary(data_6)
summary(bn_melatonin_model)
summary(data_5_subset)
data_5_subset$Melatonin.Level.group..pg.mL. <- predict(bn_melatonin_model, newdata = data_5_subset)
head(data_5_subset)
names(data_5_subset)
predictions <- predict(bn_melatonin_model, newdata = data_5_subset)
sum(is.na(data_5_subset))
head(data_5_subset)
names(data_5_subset)
summary(data_5_subset)
summary(data_5_subset$Age.group)
summary(data_6$Age.group)
summary(melatonin_subset)
# Check the factor levels of each column in both datasets
sapply(data_5_subset, levels)
sapply(melatonin_subset, levels)  # Assuming 'training_data' is what you used to train the model
# Check the factor levels of each column in both datasets
sapply(data_5_subset, levels)
sapply(melatonin_subset, levels)  # Assuming 'training_data' is what you used to train the model
# Fit Model
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level.group..pg.mL.")]
summary(melatonin_subset$Melatonin.Level.group..pg.mL.)
summary(melatonin_subset$Sleep.Quality.Rating)
# Sleep.Quality.Rating
melatonin_data <- melatonin_data %>% mutate(Sleep.Quality.Rating = cut(Sleep.Quality.Rating,
breaks = c(0, 2, 4, 6, 8, 10),
labels = c(1, 2, 3, 4, 5),
right = TRUE))
table(melatonin_data$Sleep.Quality.Rating)
# Todolist
# Add Melatonin
melatonin_data <- read.csv(file='SocialMediaUsage_SleepLatencyAnalysis_Singapore.csv', header=TRUE, sep=",", na.strings=".")
# Age.group
melatonin_data <- melatonin_data %>% mutate(Age.group = cut(Age,
breaks = seq(0, 100, by = 10),
right = FALSE,
labels = paste(seq(0, 90, by = 10), seq(9, 99, by = 10), sep = "-")))
table(melatonin_data$Age.group)
# Sleep.duration.group
melatonin_data <- melatonin_data %>% mutate(Sleep.duration.group = cut(Total.Sleep.Time..hours.,
breaks = seq(3, 10, by = 0.5),
right = FALSE,
labels = paste(seq(3, 9.5, by = 0.5), seq(3.5, 10, by = 0.5), sep = "-")))
table(melatonin_data$Sleep.duration.group)
# Sleep.Quality.Rating
melatonin_data <- melatonin_data %>% mutate(Sleep.Quality.Rating = cut(Sleep.Quality.Rating,
breaks = c(0, 1, 2, 3, 4, 5),
labels = c(1, 2, 3, 4, 5),
right = TRUE))
table(melatonin_data$Sleep.Quality.Rating)
melatonin_data <- melatonin_data %>% mutate(Melatonin.Level.group..pg.mL. = cut(Melatonin.Level..pg.mL.,
method = "hartemink",
breaks = 3))
table(melatonin_data$Melatonin.Level.group..pg.mL.)
# Fit Model
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level.group..pg.mL.")]
data_5_subset <- data_5[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating")]
melatonin_subset$Age.group <- as.factor(melatonin_subset$Age.group)
melatonin_subset$Sleep.duration.group <- as.factor(melatonin_subset$Sleep.duration.group)
melatonin_subset$Sleep.Quality.Rating <- as.factor(melatonin_subset$Sleep.Quality.Rating)
melatonin_subset$Melatonin.Level.group..pg.mL. <- as.factor(melatonin_subset$Melatonin.Level.group..pg.mL.)
bn_melatonin <- hc(melatonin_subset)
bn_melatonin_model <- bn.fit(bn_melatonin, data = melatonin_subset)
# Infer Melatonin Level using fitted model
data_6 <- data_5
data_6$Melatonin.Level.group..pg.mL. <- predict(bn_melatonin_model, newdata = data_5_subset)
names(data_5_subset)
summary(melatonin_subset)
summary(data_6$Age.group)
summary(data_5_subset)
summary(melatonin_subset)
# Check the factor levels of each column in both datasets
sapply(data_5_subset, levels)
sapply(melatonin_subset, levels)  # Assuming 'training_data' is what you used to train the model
predictions <- predict(bn_melatonin_model, newdata = data_5_subset)
data_5_subset$Age.group <- factor(data_5_subset$Age.group, levels = levels(melatonin_subset$Age.group))
data_5_subset$Sleep.duration.group <- factor(data_5_subset$Sleep.duration.group, levels = levels(melatonin_subset$Sleep.duration.group))
data_5_subset$Sleep.Quality.Rating <- factor(data_5_subset$Sleep.Quality.Rating, levels = levels(melatonin_subset$Sleep.Quality.Rating))
data_6$Melatonin.Level.group..pg.mL. <- predict(bn_melatonin_model, newdata = data_5_subset)
new_predictions <- predict(
object = bn_melatonin_model,
data = data_6,
node = "Melatonin.Level.group..pg.mL.",
method = "bayes-lw")
data_6 <- data_6 %>% select(-User.ID)
new_predictions <- predict(
object = bn_melatonin_model,
data = data_6,
node = "Melatonin.Level.group..pg.mL.",
method = "bayes-lw")
summary(data_6)
summary(new_predictions)
new_predictions
summary(melatonin_subset$Melatonin.Level.group..pg.mL.)
table(melatonin_data$Melatonin.Level.group..pg.mL.)
melatonin_data <- melatonin_data %>% mutate(Melatonin.Level.group..pg.mL. = cut(Melatonin.Level..pg.mL.,
method = "hartemink",
breaks = 3))
melatonin_data <- melatonin_data %>% mutate(Melatonin.Level.group.custom = cut(Melatonin.Level..pg.mL.,
breaks = c(-Inf, 22.7, 40.4, Inf),
labels = c("(-Inf, 22.7]", "(22.7, 40.4]", "(40.4, Inf]")))
table(melatonin_data$Melatonin.Level.group..pg.mL.)
melatonin_data <- melatonin_data %>% mutate(Melatonin.Level.group..pg.mL. = cut(Melatonin.Level..pg.mL.,
breaks = c(-Inf, 22.7, 40.4, Inf),
labels = c("(-Inf, 22.7]", "(22.7, 40.4]", "(40.4, Inf]")))
table(melatonin_data$Melatonin.Level.group..pg.mL.)
# Fit Model
melatonin_subset <- melatonin_data[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating", "Melatonin.Level.group..pg.mL.")]
data_5_subset <- data_5[, c("Age.group", "Sleep.duration.group", "Sleep.Quality.Rating")]
melatonin_subset$Age.group <- as.factor(melatonin_subset$Age.group)
melatonin_subset$Sleep.duration.group <- as.factor(melatonin_subset$Sleep.duration.group)
melatonin_subset$Sleep.Quality.Rating <- as.factor(melatonin_subset$Sleep.Quality.Rating)
melatonin_subset$Melatonin.Level.group..pg.mL. <- as.factor(melatonin_subset$Melatonin.Level.group..pg.mL.)
bn_melatonin <- hc(melatonin_subset)
bn_melatonin_model <- bn.fit(bn_melatonin, data = melatonin_subset)
# Infer Melatonin Level using fitted model
data_6 <- data_5
bn_1_df <- data.frame(data_1)
data_6 <- data_6 %>% select(-User.ID)
new_predictions <- predict( object = bn_melatonin_model,
data = data_6,
node = "Melatonin.Level.group..pg.mL.",
method = "bayes-lw")
summary(melatonin_subset$Melatonin.Level.group..pg.mL.)
data_6$Melatonin.Level.group..pg.mL. <- new_predictions
summary(data_6$Melatonin.Level.group..pg.mL.)
data_6$Melatonin.Level.group..pg.mL.
# Plot using graphviz
fitted_bn_2 <- bn.fit(bn_2, data = bn_2_df)
# 결측치 확인
colSums(is.na(melatonin_subset))
# 데이터 형식 확인
str(melatonin_subset)
# Knn for imputation
data_7 <- kNN(data_6)
summary(data_7)
summary(data_7$Melatonin.Level.group..pg.mL.)
na_counts <- colSums(is.na(data_7))
na_counts[na_counts > 0]
na_counts[na_counts > 0]
na_counts_data_7 <- colSums(is.na(data_7))
na_counts_data_7[na_counts > 0]
# Knn for imputation
data_7 <- kNN(data_6)
any(is.na(data_7)
data_7 <- data_7 %>% select(-(16:30))
any(is.na(data_7))
data_7 <- data_7 %>% select(-(16:30))
# Knn for imputation
data_7 <- kNN(data_6)
any(is.na(data_7))
data_7 <- data_7 %>% select(-(16:30))
# Knn for imputation
data_7 <- kNN(data_6)
any(is.na(data_7))
summary(data_7)
data_7 <- data_7 %>% select(-(14:26))
summary(data_7)
# Fit BN6
bn_6_df <- data.frame(data_6)
bn_6 <- hc(bn_6_df)
plot(bn_6)
graphviz.plot(bn_6, layout = "dot")
# Fit BN7
bn_7_df <- data.frame(data_7)
bn_7 <- hc(bn_7_df)
plot(bn_7)
graphviz.plot(bn_7, layout = "dot")
